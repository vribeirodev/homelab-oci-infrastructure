name: 'Terraform Validation'

on:
  pull_request:
    paths:
      - 'environments/**/*.tf'
      - 'modules/**/*.tf'
      - '.github/workflows/terraform-validation.yml'
  push:
    branches: [main]
    paths:
      - 'environments/**/*.tf'
      - 'modules/**/*.tf'

permissions:
  contents: write
  pull-requests: write

env:
  TF_VERSION: '1.6.0'

jobs:
  validate:
    name: 'Terraform Validate'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [production, staging]

    defaults:
      run:
        working-directory: environments/${{ matrix.environment }}/terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Format
        run: terraform fmt -recursive

      - name: Check for formatting changes
        id: fmt_changes
        run: |
          if git diff --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit formatting changes
        if: steps.fmt_changes.outputs.changed == 'true' && github.event_name == 'push'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "style: auto-format Terraform files [skip ci]"
          git push

      - name: Comment on PR if formatting changed
        if: steps.fmt_changes.outputs.changed == 'true' && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üîß **Formata√ß√£o Terraform**\n\nEste PR cont√©m arquivos Terraform que precisam de formata√ß√£o. Execute:\n```bash\nterraform fmt -recursive\ngit add .\ngit commit -m "style: format Terraform files"\n```'
            })

      - name: Terraform Init
        run: terraform init -backend=false

      - name: Terraform Validate
        run: terraform validate

  security:
    name: 'Security Scan'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          soft_fail: true
          format: sarif
          additional_args: --exclude-downloaded-modules

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          framework: terraform
          soft_fail: true
          output_format: sarif
          download_external_modules: false

  lint:
    name: 'Terraform Lint'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest

      - name: Init TFLint
        run: tflint --init

      - name: Run TFLint (modules)
        run: |
          for module in modules/*/; do
            echo "Linting $module"
            tflint --chdir=$module
          done

      - name: Run TFLint (environments)
        run: |
          for env in environments/*/terraform/; do
            echo "Linting $env"
            tflint --chdir=$env
          done
